version: '3.8'

services:
  # Backend API Gateway
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: andikar-backend-api
    restart: always
    ports:
      - "8000:8000"
    environment:
      - PORT=8000
      - SECRET_KEY=${SECRET_KEY}
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/andikar
      - HUMANIZER_API_URL=${HUMANIZER_API_URL}
      - AI_DETECTOR_API_URL=${AI_DETECTOR_API_URL}
      - MPESA_CONSUMER_KEY=${MPESA_CONSUMER_KEY}
      - MPESA_CONSUMER_SECRET=${MPESA_CONSUMER_SECRET}
      - MPESA_PASSKEY=${MPESA_PASSKEY}
      - MPESA_SHORTCODE=${MPESA_SHORTCODE}
      - MPESA_CALLBACK_URL=${MPESA_CALLBACK_URL}
      - RATE_LIMIT_REQUESTS=100
      - RATE_LIMIT_PERIOD=60
    volumes:
      - .:/app
    depends_on:
      - postgres
    networks:
      - andikar-network
    command: ./startup.sh

  # PostgreSQL Database
  postgres:
    image: postgres:14-alpine
    container_name: andikar-postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=andikar
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - andikar-network

  # pgAdmin - PostgreSQL Admin Interface
  pgadmin:
    image: dpage/pgadmin4
    container_name: andikar-pgadmin
    restart: always
    ports:
      - "5050:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@andikar.com
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD:-postgres}
    depends_on:
      - postgres
    networks:
      - andikar-network

volumes:
  postgres_data:

networks:
  andikar-network:
    driver: bridge
